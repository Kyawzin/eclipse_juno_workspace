package com.tanzeelkazi.core;

import java.util.Map;
import java.util.TreeMap;

public class Error {
    
    public static enum Type {
        NONE(-1),
        SUCCESS(0),
        FAIL(1)
        ;
        
        private static Map<Integer, Type> valueMap = new TreeMap<Integer,Type>();
        //private static final int START_VALUE = -1;
        private int value;
        
        static {
            for(int i=0;i<values().length;i++)
            {
                valueMap.put(values()[i].value, values()[i]);
            }
        }
        
        public static Type fromInt(int i) {
            return valueMap.get(i);
        }
        
        private Type(int value) {
            this.value = value;
        }
        
        public int value() {
            return this.value;
        }
    }
    
    private Type _errorType;
    private int _errorCode;
    
    public Error() {
        this._Error(Type.NONE);
        return;
    }
    
    public Error(Type errorType) {
        this._Error(errorType);
        return;
    }
    
    public Error(int errorCode) {
        this._Error(Type.fromInt(errorCode));
        return;
    }
    
    private void _Error(Type errorType) {
        this.setErrorType(errorType);
        return;
    }
    
    private void _Error(int errorCode) {
        this.setErrorType(errorType);
        return;
    }
    
    
    public void setErrorType(Type errorType) {
        this._errorType = errorType;
        this._errorCode = this._errorType.value();
        return;
    }
    
    public Type getErrorType() {
        return this._errorType;
    }
    
    public void setErrorCode(int errorCode) {
        this._errorType = Type.fromInt(errorCode);
        this._errorCode = errorCode;
        return;
    }
    
    public int getErrorCode() {
        return this._errorCode;
    }
}
